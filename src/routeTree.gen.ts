/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as FormsSmartDiagnosticsImport } from './routes/forms/smart-diagnostics'

// Create Virtual Routes

const FormsBasicQuestionnaireLazyImport = createFileRoute(
  '/forms/basic-questionnaire',
)()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FormsBasicQuestionnaireLazyRoute =
  FormsBasicQuestionnaireLazyImport.update({
    path: '/forms/basic-questionnaire',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/forms/basic-questionnaire.lazy').then((d) => d.Route),
  )

const FormsSmartDiagnosticsRoute = FormsSmartDiagnosticsImport.update({
  path: '/forms/smart-diagnostics',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/forms/smart-diagnostics': {
      id: '/forms/smart-diagnostics'
      path: '/forms/smart-diagnostics'
      fullPath: '/forms/smart-diagnostics'
      preLoaderRoute: typeof FormsSmartDiagnosticsImport
      parentRoute: typeof rootRoute
    }
    '/forms/basic-questionnaire': {
      id: '/forms/basic-questionnaire'
      path: '/forms/basic-questionnaire'
      fullPath: '/forms/basic-questionnaire'
      preLoaderRoute: typeof FormsBasicQuestionnaireLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forms/smart-diagnostics': typeof FormsSmartDiagnosticsRoute
  '/forms/basic-questionnaire': typeof FormsBasicQuestionnaireLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forms/smart-diagnostics': typeof FormsSmartDiagnosticsRoute
  '/forms/basic-questionnaire': typeof FormsBasicQuestionnaireLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/forms/smart-diagnostics': typeof FormsSmartDiagnosticsRoute
  '/forms/basic-questionnaire': typeof FormsBasicQuestionnaireLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/forms/smart-diagnostics' | '/forms/basic-questionnaire'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/forms/smart-diagnostics' | '/forms/basic-questionnaire'
  id:
    | '__root__'
    | '/'
    | '/forms/smart-diagnostics'
    | '/forms/basic-questionnaire'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FormsSmartDiagnosticsRoute: typeof FormsSmartDiagnosticsRoute
  FormsBasicQuestionnaireLazyRoute: typeof FormsBasicQuestionnaireLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FormsSmartDiagnosticsRoute: FormsSmartDiagnosticsRoute,
  FormsBasicQuestionnaireLazyRoute: FormsBasicQuestionnaireLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/forms/smart-diagnostics",
        "/forms/basic-questionnaire"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/forms/smart-diagnostics": {
      "filePath": "forms/smart-diagnostics.tsx"
    },
    "/forms/basic-questionnaire": {
      "filePath": "forms/basic-questionnaire.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
